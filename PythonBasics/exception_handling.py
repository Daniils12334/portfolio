#exception = An event that interrupts the flow of a program
#            (ZeroDivisionError, TypeError, ValueError)
#            1.try, 2.except, 3.finally


# Python error documentation
# https://docs.python.org/3/library/exceptions.html


# 1 / 0 ZeroDivisionError
#1 + "1" TypeError
#int("pizza") ValueError invalid literal for int() with base 10" 'pizza'

try:
    number = int(input("Enter a number: "))
    print(1 / number)
except ZeroDivisionError:
    print("Value cant be zero")
except ValueError:
    print("Enter numbers instead of strings")
# except Exception:                  # Microsoft style
    # print("something went wrong!") # Bad practise
finally:
    print("Do some cleanup here")

# üß® –ß—Ç–æ —Ç–∞–∫–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è –≤ Python?

# –ò—Å–∫–ª—é—á–µ–Ω–∏—è ‚Äî —ç—Ç–æ –æ—à–∏–±–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –≤–æ–∑–Ω–∏–∫–∞—é—Ç –≤–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã. Python ¬´–≤—ã–±—Ä–∞—Å—ã–≤–∞–µ—Ç¬ª (raise) –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, –µ—Å–ª–∏ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —á—Ç–æ-—Ç–æ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å, –¥–æ—Å—Ç—É–ø –∫ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É —Ñ–∞–π–ª—É –∏ —Ç.–¥.).
# ‚úÖ –ü—Ä–∏–º–µ—Ä: –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏—è

# try:
#     x = 10 / 0
# except ZeroDivisionError:
#     print("–ù–µ–ª—å–∑—è –¥–µ–ª–∏—Ç—å –Ω–∞ –Ω–æ–ª—å!")

# üìå –ë–ª–æ–∫ try ‚Äî —Ç—É—Ç –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –≤—ã–∑–≤–∞—Ç—å –æ—à–∏–±–∫—É.
# üìå –ë–ª–æ–∫ except ‚Äî –∑–¥–µ—Å—å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫—É, –µ—Å–ª–∏ –æ–Ω–∞ —Å–ª—É—á–∏–ª–∞—Å—å.
# üîÅ –û–±—â–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞:

# try:
#     # –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –æ–ø–∞—Å–Ω—ã–π –∫–æ–¥
# except –¢–∏–ø–ò—Å–∫–ª—é—á–µ–Ω–∏—è:
#     # –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏—è
# else:
#     # –µ—Å–ª–∏ –æ—à–∏–±–∫–∏ –Ω–µ –±—ã–ª–æ
# finally:
#     # –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤—Å–µ–≥–¥–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∑–∞–∫—Ä—ã—Ç–∏–µ —Ñ–∞–π–ª–∞ –∏–ª–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è)

# üéØ –ü—Ä–∏–º–µ—Ä—ã —Ä–∞–∑–Ω—ã—Ö –∏—Å–∫–ª—é—á–µ–Ω–∏–π:

# try:
#     lst = [1, 2, 3]
#     print(lst[5])
# except IndexError:
#     print("–≠–ª–µ–º–µ–Ω—Ç —Å —Ç–∞–∫–∏–º –∏–Ω–¥–µ–∫—Å–æ–º –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")

# try:
#     num = int("abc")
# except ValueError:
#     print("–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å —Å—Ç—Ä–æ–∫—É –≤ —á–∏—Å–ª–æ!")

# üí° –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∏—Å–∫–ª—é—á–µ–Ω–∏–π:

# try:
#     x = int("abc")
# except (ValueError, TypeError):
#     print("–û—à–∏–±–∫–∞ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è!")

# üö® –°–æ–∑–¥–∞–Ω–∏–µ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∏—Å–∫–ª—é—á–µ–Ω–∏–π:

# class MyCustomError(Exception):
#     pass

# def do_something():
#     raise MyCustomError("–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫!")

# try:
#     do_something()
# except MyCustomError as e:
#     print(f"–ü–æ–π–º–∞–ª–∏ –æ—à–∏–±–∫—É: {e}")

# üîç –ü–æ—á–µ–º—É —ç—Ç–æ –≤–∞–∂–Ω–æ?

#     –ò—Å–∫–ª—é—á–µ–Ω–∏—è –ø–æ–∑–≤–æ–ª—è—é—Ç –Ω–µ –ª–æ–º–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö.

#     –ü–æ–º–æ–≥–∞—é—Ç –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å –∏ –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–±–ª–µ–º—ã.

#     –î–µ–ª–∞—é—Ç –∫–æ–¥ —á–∏—Ç–∞–µ–º—ã–º –∏ –Ω–∞–¥—ë–∂–Ω—ã–º.