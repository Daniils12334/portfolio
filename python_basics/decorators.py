#Decorator = A function that extends the behaviour of another function
#            w/o modifying the base functions
#            Pass the base function as an argument to the decorator

#            @add_spronkles
#            get_ice_cream("vanilla")

def add_sprinkles(func):
    def wrapper(*args,**kwargs):
        func(*args,**kwargs)
        print("You add sprinkles")        
    return wrapper

def add_fudge(func):
    def wrapper(*args,**kwargs):
        print("You add fudge")
        func(*args,**kwargs)
    return wrapper


@add_sprinkles
@add_fudge
def get_ice_cream(flavor):
    print("Here is your {flavor} icecream: ")

get_ice_cream("vanilla")

# üìå –û—Å–Ω–æ–≤–Ω–∞—è –∏–¥–µ—è

# –î–µ–∫–æ—Ä–∞—Ç–æ—Ä ‚Äî —ç—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥—Ä—É–≥—É—é —Ñ—É–Ω–∫—Ü–∏—é –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º –ø–æ–≤–µ–¥–µ–Ω–∏–µ–º.
# ‚úÖ –ü—Ä–æ—Å—Ç–æ–π –ø—Ä–∏–º–µ—Ä

# def my_decorator(func):
#     def wrapper():
#         print("–ß—Ç–æ-—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –¥–æ –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏.")
#         func()
#         print("–ß—Ç–æ-—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø–æ—Å–ª–µ –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏.")
#     return wrapper

# @my_decorator
# def say_hello():
#     print("–ü—Ä–∏–≤–µ—Ç!")

# say_hello()

# üîç –í—ã–≤–æ–¥:

# –ß—Ç–æ-—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –¥–æ –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏.
# –ü—Ä–∏–≤–µ—Ç!
# –ß—Ç–æ-—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø–æ—Å–ª–µ –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏.

# ‚öôÔ∏è –¢–æ –∂–µ –±–µ–∑ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ @

# decorated = my_decorator(say_hello)
# decorated()

# üì¶ –î–µ–∫–æ—Ä–∞—Ç–æ—Ä —Å –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏ —Ñ—É–Ω–∫—Ü–∏–∏

# def log_args(func):
#     def wrapper(*args, **kwargs):
#         print(f"–ê—Ä–≥—É–º–µ–Ω—Ç—ã: {args}, {kwargs}")
#         return func(*args, **kwargs)
#     return wrapper

# @log_args
# def add(a, b):
#     return a + b

# print(add(3, 4))

# üí° –î–µ–∫–æ—Ä–∞—Ç–æ—Ä —Å –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏ (—Ñ–∞–±—Ä–∏–∫–∞ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–≤)

# def repeat(n):
#     def decorator(func):
#         def wrapper(*args, **kwargs):
#             for _ in range(n):
#                 func(*args, **kwargs)
#         return wrapper
#     return decorator

# @repeat(3)
# def greet():
#     print("–ü—Ä–∏–≤–µ—Ç!")

# greet()

# üìö –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ —Ä–µ–∞–ª—å–Ω—ã—Ö –∑–∞–¥–∞—á–∞—Ö:

#     –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ

#     –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ (@lru_cache)

#     –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤

#     –¢–∞–π–º–∏–Ω–≥ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è

#     –†–µ—Ç—Ä–∞–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ API –∏ —Ç.–ø.